name: Build and Deploy to AKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: portfolio-analyzer-backend
  NAMESPACE: default

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Convert repository name to lowercase
      id: repo
      run: echo "repo_lower=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lower }}:latest
          ${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lower }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lower }}:latest
        cache-to: type=inline

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
          }

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

    - name: Create namespace if not exists
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s/deployment.yaml -n ${{ env.NAMESPACE }}
        kubectl apply -f k8s/ingress.yaml -n ${{ env.NAMESPACE }}
        kubectl apply -f k8s/hpa.yaml -n ${{ env.NAMESPACE }}

    - name: Restart deployment
      run: |
        kubectl rollout restart deployment/portfolio-analyzer-backend -n ${{ env.NAMESPACE }}
        kubectl rollout status deployment/portfolio-analyzer-backend -n ${{ env.NAMESPACE }} --timeout=5m

    - name: Get deployment status
      run: |
        kubectl get pods -n ${{ env.NAMESPACE }} -l app=portfolio-analyzer-backend
        kubectl get svc -n ${{ env.NAMESPACE }} -l app=portfolio-analyzer-backend
        kubectl get ingress -n ${{ env.NAMESPACE }}

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx

    - name: Run tests
      run: |
        echo "Add your tests here"
        # pytest tests/
